version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: winu-bot-signal-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-million_trader}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-million}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: winu-bot-signal-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: winu-bot-signal-api
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=this-is-a-very-long-and-secure-jwt-secret-key-for-production-use-only
      - MAX_POSITIONS=10
      - SCAN_INTERVAL_SECONDS=30
      - MIN_SIGNAL_SCORE=0.65
      - MIN_VOLUME_USD=100000
      - TOP_COINS_COUNT=200
    ports:
      - "${API_PORT:-8005}:8005"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - ./packages:/packages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    container_name: winu-bot-signal-worker
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=million
      - POSTGRES_USER=million
      - POSTGRES_PASSWORD=changeme
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - JWT_SECRET=this-is-a-very-long-and-secure-jwt-secret-key-for-production-use-only
      - MAX_POSITIONS=10
      - SCAN_INTERVAL_SECONDS=30
      - MIN_SIGNAL_SCORE=0.65
      - MIN_VOLUME_USD=100000
      - TOP_COINS_COUNT=200
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - ./apps/worker:/app
      - ./packages:/packages
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: winu-bot-signal-web
    environment:
      - NEXTAUTH_URL=http://localhost:3003
      - NEXT_PUBLIC_API_URL=https://api.winu.app
      - API_URL_INTERNAL=http://api:8005
    ports:
      - "3003:3000"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: winu-bot-signal-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./deployments/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: winu-bot-signal-grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/grafana/provisioning:/etc/grafana/provisioning
      - ./deployments/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    container_name: winu-bot-signal-celery-beat
    command: celery -A worker beat --loglevel=info
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=million
      - POSTGRES_USER=million
      - POSTGRES_PASSWORD=changeme
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - JWT_SECRET=this-is-a-very-long-and-secure-jwt-secret-key-for-production-use-only
      - MAX_POSITIONS=10
      - SCAN_INTERVAL_SECONDS=30
      - MIN_SIGNAL_SCORE=0.65
      - MIN_VOLUME_USD=100000
      - TOP_COINS_COUNT=200
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/worker:/app
      - ./packages:/packages
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: winu-bot-signal-network


