#!/bin/bash

# Million Trader Setup Script
# This script sets up the development environment

set -e

echo "üöÄ Setting up Million Trader..."

# Check if Docker and Docker Compose are installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker is not installed. Please install Docker first."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose is not installed. Please install Docker Compose first."
    exit 1
fi

# Create .env file if it doesn't exist
if [ ! -f .env ]; then
    echo "üìù Creating .env file from .env.example..."
    cp .env.example .env
    echo "‚ö†Ô∏è  Please edit .env file with your API keys and configuration"
fi

# Create necessary directories
echo "üìÅ Creating necessary directories..."
mkdir -p logs data/postgres data/redis data/grafana data/prometheus

# Set permissions
echo "üîê Setting permissions..."
chmod +x scripts/*.sh

# Build and start services
echo "üê≥ Building and starting Docker services..."
docker-compose up -d --build

# Wait for services to be ready
echo "‚è≥ Waiting for services to start..."
sleep 30

# Check service health
echo "üîç Checking service health..."

# Check API health
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    echo "‚úÖ API service is healthy"
else
    echo "‚ùå API service is not responding"
fi

# Check Web dashboard
if curl -f http://localhost:3003 > /dev/null 2>&1; then
    echo "‚úÖ Web dashboard is accessible"
else
    echo "‚ùå Web dashboard is not responding"
fi

# Check database
if docker-compose exec -T postgres pg_isready -U million > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL is ready"
else
    echo "‚ùå PostgreSQL is not ready"
fi

# Check Redis
if docker-compose exec -T redis redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis is ready"
else
    echo "‚ùå Redis is not ready"
fi

echo ""
echo "üéâ Million Trader setup complete!"
echo ""
echo "üìä Access points:"
echo "  ‚Ä¢ Web Dashboard: http://localhost:3003"
echo "  ‚Ä¢ API Documentation: http://localhost:8000/docs"
echo "  ‚Ä¢ Grafana Monitoring: http://localhost:3001 (admin/admin)"
echo "  ‚Ä¢ Prometheus: http://localhost:9090"
echo ""
echo "üìù Next steps:"
echo "  1. Edit .env file with your API keys"
echo "  2. Configure Telegram bot token and chat ID"
echo "  3. Configure Discord webhook URL"
echo "  4. Restart services: docker-compose restart"
echo ""
echo "üîß Useful commands:"
echo "  ‚Ä¢ View logs: docker-compose logs -f"
echo "  ‚Ä¢ Stop services: docker-compose down"
echo "  ‚Ä¢ Restart services: docker-compose restart"
echo "  ‚Ä¢ View API logs: docker-compose logs -f api"
echo "  ‚Ä¢ View Worker logs: docker-compose logs -f worker"
echo ""
echo "‚ö†Ô∏è  IMPORTANT: This is not financial advice. Trade responsibly!"

